{
  "address": "0x078a2041182D6777C4aeffb6d497DCf9eb6e4B5B",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_ADJUSTMENT_BASIS_POINTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_ADJUSTMENT_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPREAD_BASIS_POINTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ONE_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "adjustmentBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getLatestPrimaryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        }
      ],
      "name": "getPriceV1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        }
      ],
      "name": "getPrimaryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_referencePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_maximise",
          "type": "bool"
        }
      ],
      "name": "getSecondaryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdjustmentAdditive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSecondaryPriceEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastAdjustmentTimings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxStrictPriceDeviation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "priceDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "priceFeeds",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceSampleSpace",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondaryPriceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isAdditive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_adjustmentBps",
          "type": "uint256"
        }
      ],
      "name": "setAdjustment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsSecondaryPriceEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxStrictPriceDeviation",
          "type": "uint256"
        }
      ],
      "name": "setMaxStrictPriceDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceSampleSpace",
          "type": "uint256"
        }
      ],
      "name": "setPriceSampleSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_secondaryPriceFeed",
          "type": "address"
        }
      ],
      "name": "setSecondaryPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_spreadBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpreadBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spreadThresholdBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpreadThresholdBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_priceDecimals",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isStrictStable",
          "type": "bool"
        }
      ],
      "name": "setTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "spreadBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spreadThresholdBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strictStableTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3f5745415fcc0f5e36d8c19c0baf0d8c7b92d4954db48a7162f6ffb3281a90d9",
  "receipt": {
    "to": null,
    "from": "0xE171C32E794A36c08A1BC29c643746ECeA5cD93a",
    "contractAddress": "0x078a2041182D6777C4aeffb6d497DCf9eb6e4B5B",
    "transactionIndex": 1,
    "gasUsed": "1542398",
    "logsBloom": "0x
    "blockHash": "0x1b595e410f98205358ab393d841f96e11e5a6729710353a479401d1578f2051c",
    "transactionHash": "0x3f5745415fcc0f5e36d8c19c0baf0d8c7b92d4954db48a7162f6ffb3281a90d9",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 5257660,
        "transactionHash": "0x3f5745415fcc0f5e36d8c19c0baf0d8c7b92d4954db48a7162f6ffb3281a90d9",
        "address": "0x078a2041182D6777C4aeffb6d497DCf9eb6e4B5B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e171c32e794a36c08a1bc29c643746ecea5cd93a"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x1b595e410f98205358ab393d841f96e11e5a6729710353a479401d1578f2051c"
      }
    ],
    "blockNumber": 5257660,
    "cumulativeGasUsed": "1542398",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e5df699e1f130ee7e5e4748a3742d224",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_ADJUSTMENT_BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_ADJUSTMENT_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPREAD_BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"adjustmentBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLatestPrimaryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"}],\"name\":\"getPriceV1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"}],\"name\":\"getPrimaryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_referencePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_maximise\",\"type\":\"bool\"}],\"name\":\"getSecondaryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdjustmentAdditive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSecondaryPriceEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastAdjustmentTimings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStrictPriceDeviation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceSampleSpace\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondaryPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isAdditive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_adjustmentBps\",\"type\":\"uint256\"}],\"name\":\"setAdjustment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"setIsSecondaryPriceEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxStrictPriceDeviation\",\"type\":\"uint256\"}],\"name\":\"setMaxStrictPriceDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceSampleSpace\",\"type\":\"uint256\"}],\"name\":\"setPriceSampleSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_secondaryPriceFeed\",\"type\":\"address\"}],\"name\":\"setSecondaryPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_spreadBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpreadBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spreadThresholdBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpreadThresholdBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_priceDecimals\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isStrictStable\",\"type\":\"bool\"}],\"name\":\"setTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"spreadBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spreadThresholdBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strictStableTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VaultPriceFeed.sol\":\"VaultPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/VaultPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.17;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {IPriceFeed} from \\\"./interfaces/IPriceFeed.sol\\\";\\nimport {ISecondaryPriceFeed} from \\\"./interfaces/ISecondaryPriceFeed.sol\\\";\\nimport {IVaultPriceFeed} from \\\"./interfaces/IVaultPriceFeed.sol\\\";\\n\\ncontract VaultPriceFeed is Ownable, IVaultPriceFeed {\\n    uint256 public constant PRICE_PRECISION = 10 ** 30;\\n    uint256 public constant ONE_USD = PRICE_PRECISION;\\n    uint256 public constant BASIS_POINTS_DIVISOR = 10000;\\n    uint256 public constant MAX_SPREAD_BASIS_POINTS = 50;\\n    uint256 public constant MAX_ADJUSTMENT_INTERVAL = 2 hours;\\n    uint256 public constant MAX_ADJUSTMENT_BASIS_POINTS = 20;\\n\\n    bool public isSecondaryPriceEnabled = true;\\n    uint256 public priceSampleSpace = 1;\\n    uint256 public maxStrictPriceDeviation = 5 * 10 ** 27;\\n    address public secondaryPriceFeed;\\n    uint256 public spreadThresholdBasisPoints = 30;\\n\\n    mapping(address => address) public priceFeeds;\\n    mapping(address => uint256) public priceDecimals;\\n    mapping(address => uint256) public spreadBasisPoints;\\n    // Chainlink can return prices for stablecoins\\n    // that differs from 1 USD by a larger percentage than stableSwapFeeBasisPoints\\n    // we use strictStableTokens to cap the price to 1 USD\\n    // this allows us to configure stablecoins like DAI as being a stableToken\\n    // while not being a strictStableToken\\n    mapping(address => bool) public strictStableTokens;\\n\\n    mapping(address => uint256) public override adjustmentBasisPoints;\\n    mapping(address => bool) public override isAdjustmentAdditive;\\n    mapping(address => uint256) public lastAdjustmentTimings;\\n\\n    function setAdjustment(\\n        address _token,\\n        bool _isAdditive,\\n        uint256 _adjustmentBps\\n    ) external override onlyOwner {\\n        require(\\n            lastAdjustmentTimings[_token] + MAX_ADJUSTMENT_INTERVAL <\\n                block.timestamp,\\n            \\\"VaultPriceFeed: adjustment frequency exceeded\\\"\\n        );\\n        require(\\n            _adjustmentBps <= MAX_ADJUSTMENT_BASIS_POINTS,\\n            \\\"invalid _adjustmentBps\\\"\\n        );\\n        isAdjustmentAdditive[_token] = _isAdditive;\\n        adjustmentBasisPoints[_token] = _adjustmentBps;\\n        lastAdjustmentTimings[_token] = block.timestamp;\\n    }\\n\\n    function setIsSecondaryPriceEnabled(\\n        bool _isEnabled\\n    ) external override onlyOwner {\\n        isSecondaryPriceEnabled = _isEnabled;\\n    }\\n\\n    function setSecondaryPriceFeed(\\n        address _secondaryPriceFeed\\n    ) external onlyOwner {\\n        secondaryPriceFeed = _secondaryPriceFeed;\\n    }\\n\\n    function setSpreadBasisPoints(\\n        address _token,\\n        uint256 _spreadBasisPoints\\n    ) external override onlyOwner {\\n        require(\\n            _spreadBasisPoints <= MAX_SPREAD_BASIS_POINTS,\\n            \\\"VaultPriceFeed: invalid _spreadBasisPoints\\\"\\n        );\\n        spreadBasisPoints[_token] = _spreadBasisPoints;\\n    }\\n\\n    function setSpreadThresholdBasisPoints(\\n        uint256 _spreadThresholdBasisPoints\\n    ) external override onlyOwner {\\n        spreadThresholdBasisPoints = _spreadThresholdBasisPoints;\\n    }\\n\\n    function setPriceSampleSpace(\\n        uint256 _priceSampleSpace\\n    ) external override onlyOwner {\\n        require(\\n            _priceSampleSpace > 0,\\n            \\\"VaultPriceFeed: invalid _priceSampleSpace\\\"\\n        );\\n        priceSampleSpace = _priceSampleSpace;\\n    }\\n\\n    function setMaxStrictPriceDeviation(\\n        uint256 _maxStrictPriceDeviation\\n    ) external override onlyOwner {\\n        maxStrictPriceDeviation = _maxStrictPriceDeviation;\\n    }\\n\\n    function setTokenConfig(\\n        address _token,\\n        address _priceFeed,\\n        uint256 _priceDecimals,\\n        bool _isStrictStable\\n    ) external override onlyOwner {\\n        priceFeeds[_token] = _priceFeed;\\n        priceDecimals[_token] = _priceDecimals;\\n        strictStableTokens[_token] = _isStrictStable;\\n    }\\n\\n    function getPrice(\\n        address _token,\\n        bool _maximise,\\n        bool /* _includeAmmPrice */,\\n        bool /* _useSwapPricing */\\n    ) public view override returns (uint256) {\\n        uint256 price = getPriceV1(_token, _maximise);\\n\\n        uint256 adjustmentBps = adjustmentBasisPoints[_token];\\n        if (adjustmentBps > 0) {\\n            bool isAdditive = isAdjustmentAdditive[_token];\\n            if (isAdditive) {\\n                price =\\n                    (price * (BASIS_POINTS_DIVISOR + adjustmentBps)) /\\n                    BASIS_POINTS_DIVISOR;\\n            } else {\\n                price =\\n                    (price * (BASIS_POINTS_DIVISOR - adjustmentBps)) /\\n                    BASIS_POINTS_DIVISOR;\\n            }\\n        }\\n\\n        return price;\\n    }\\n\\n    function getPriceV1(\\n        address _token,\\n        bool _maximise\\n    ) public view returns (uint256) {\\n        uint256 price = getPrimaryPrice(_token, _maximise);\\n\\n        if (isSecondaryPriceEnabled) {\\n            price = getSecondaryPrice(_token, price, _maximise);\\n        }\\n\\n        if (strictStableTokens[_token]) {\\n            uint256 delta = price > ONE_USD ? price - ONE_USD : ONE_USD - price;\\n            if (delta <= maxStrictPriceDeviation) {\\n                return ONE_USD;\\n            }\\n\\n            // if _maximise and price is e.g. 1.02, return 1.02\\n            if (_maximise && price > ONE_USD) {\\n                return price;\\n            }\\n\\n            // if !_maximise and price is e.g. 0.98, return 0.98\\n            if (!_maximise && price < ONE_USD) {\\n                return price;\\n            }\\n\\n            return ONE_USD;\\n        }\\n\\n        uint256 _spreadBasisPoints = spreadBasisPoints[_token];\\n\\n        if (_maximise) {\\n            return\\n                (price * (BASIS_POINTS_DIVISOR + _spreadBasisPoints)) /\\n                BASIS_POINTS_DIVISOR;\\n        }\\n\\n        return\\n            (price * (BASIS_POINTS_DIVISOR - _spreadBasisPoints)) /\\n            BASIS_POINTS_DIVISOR;\\n    }\\n\\n    function getLatestPrimaryPrice(\\n        address _token\\n    ) public view override returns (uint256) {\\n        address priceFeedAddress = priceFeeds[_token];\\n        require(\\n            priceFeedAddress != address(0),\\n            \\\"VaultPriceFeed: invalid price feed\\\"\\n        );\\n\\n        IPriceFeed priceFeed = IPriceFeed(priceFeedAddress);\\n\\n        int256 price = priceFeed.latestAnswer();\\n        require(price > 0, \\\"VaultPriceFeed: invalid price\\\");\\n\\n        return uint256(price);\\n    }\\n\\n    function getPrimaryPrice(\\n        address _token,\\n        bool _maximise\\n    ) public view override returns (uint256) {\\n        address priceFeedAddress = priceFeeds[_token];\\n        require(\\n            priceFeedAddress != address(0),\\n            \\\"VaultPriceFeed: invalid price feed\\\"\\n        );\\n\\n        IPriceFeed priceFeed = IPriceFeed(priceFeedAddress);\\n\\n        uint256 price = 0;\\n        uint80 roundId = priceFeed.latestRound();\\n\\n        for (uint80 i = 0; i < priceSampleSpace; i++) {\\n            if (roundId <= i) {\\n                break;\\n            }\\n            uint256 p;\\n\\n            if (i == 0) {\\n                int256 _p = priceFeed.latestAnswer();\\n                require(_p > 0, \\\"VaultPriceFeed: invalid price\\\");\\n                p = uint256(_p);\\n            } else {\\n                (, int256 _p, , , ) = priceFeed.getRoundData(roundId - i);\\n                require(_p > 0, \\\"VaultPriceFeed: invalid price\\\");\\n                p = uint256(_p);\\n            }\\n\\n            if (price == 0) {\\n                price = p;\\n                continue;\\n            }\\n\\n            if (_maximise && p > price) {\\n                price = p;\\n                continue;\\n            }\\n\\n            if (!_maximise && p < price) {\\n                price = p;\\n            }\\n        }\\n\\n        require(price > 0, \\\"VaultPriceFeed: could not fetch price\\\");\\n        // normalise price precision\\n        uint256 _priceDecimals = priceDecimals[_token];\\n        return (price * PRICE_PRECISION) / (10 ** _priceDecimals);\\n    }\\n\\n    function getSecondaryPrice(\\n        address _token,\\n        uint256 _referencePrice,\\n        bool _maximise\\n    ) public view returns (uint256) {\\n        if (secondaryPriceFeed == address(0)) {\\n            return _referencePrice;\\n        }\\n        return\\n            ISecondaryPriceFeed(secondaryPriceFeed).getPrice(\\n                _token,\\n                _referencePrice,\\n                _maximise\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0x0867ac64933a96ac04156f9486378855dbbee9900c35176edef7ad96ff46ed22\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.17;\\n\\ninterface IPriceFeed {\\n    function latestAnswer() external view returns (int256);\\n\\n    function latestRound() external view returns (uint80);\\n\\n    // returns roundId, answer, startedAt, updatedAt, answeredInRound\\n    function getRoundData(\\n        uint80 roundId\\n    ) external view returns (uint80, int256, uint256, uint256, uint80);\\n}\\n\",\"keccak256\":\"0xcf45abc45bad3aaa610f4f9434827efa92d5c3b24bbbd5cc607a5238fad192de\",\"license\":\"MIT\"},\"contracts/interfaces/ISecondaryPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.17;\\n\\ninterface ISecondaryPriceFeed {\\n    function getPrice(\\n        address _token,\\n        uint256 _referencePrice,\\n        bool _maximise\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x44e4e65dda462c72f54c19e3e41bdcf3d065fa7b3d1333fa2ef551f508018bbc\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.17;\\n\\ninterface IVaultPriceFeed {\\n    function adjustmentBasisPoints(\\n        address _token\\n    ) external view returns (uint256);\\n\\n    function isAdjustmentAdditive(address _token) external view returns (bool);\\n\\n    function setAdjustment(\\n        address _token,\\n        bool _isAdditive,\\n        uint256 _adjustmentBps\\n    ) external;\\n\\n    function setIsSecondaryPriceEnabled(bool _isEnabled) external;\\n\\n    function setSpreadBasisPoints(\\n        address _token,\\n        uint256 _spreadBasisPoints\\n    ) external;\\n\\n    function setSpreadThresholdBasisPoints(\\n        uint256 _spreadThresholdBasisPoints\\n    ) external;\\n\\n    function setPriceSampleSpace(uint256 _priceSampleSpace) external;\\n\\n    function setMaxStrictPriceDeviation(\\n        uint256 _maxStrictPriceDeviation\\n    ) external;\\n\\n    function getPrice(\\n        address _token,\\n        bool _maximise,\\n        bool _includeAmmPrice,\\n        bool _useSwapPricing\\n    ) external view returns (uint256);\\n\\n    function getLatestPrimaryPrice(\\n        address _token\\n    ) external view returns (uint256);\\n\\n    function getPrimaryPrice(\\n        address _token,\\n        bool _maximise\\n    ) external view returns (uint256);\\n\\n    function setTokenConfig(\\n        address _token,\\n        address _priceFeed,\\n        uint256 _priceDecimals,\\n        bool _isStrictStable\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8fff2af6eb4de756d2358ce16acf1bf626eb926d5f5174f910095c2ff2e4027c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526000805460ff60a01b1916600160a01b179055600180556b1027e72f1f12813088000000600255601e60045534801561003c57600080fd5b506100463361004b565b61009b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61146c806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063717cfe7a1161011a5780639dcb511a116100ad578063b8f611051161007c578063b8f6110514610455578063cefe0f2114610478578063d694376c14610498578063eb1c92a9146104ab578063f2fde38b146104be57600080fd5b80639dcb511a146103f0578063a27ea38614610419578063a39c73a314610439578063b731dd871461044257600080fd5b806395082d25116100e957806395082d251461030b5780639a0a6635146103c15780639b18dc47146103d45780639b889380146103dd57600080fd5b8063717cfe7a146103525780637cdddae6146103725780638b86616c146103855780638da5cb5b146103b057600080fd5b806348cac2771161019d57806356c8c2c11161016c57806356c8c2c1146102f857806367781c0e1461030b5780636ce8a44b1461031e5780636fc8070814610341578063715018a61461034a57600080fd5b806348cac277146102aa5780634a4b1f4f146102ca5780634b9ade47146102d257806356bf9de4146102e557600080fd5b80632fc3a70a116101d95780632fc3a70a14610257578063378e7bf71461026a5780633eba8d36146102735780633ebbc6011461028657600080fd5b80630957aed91461020b578063126082cf146102265780632fa03b8f1461022f5780632fbfe3d314610244575b600080fd5b610213603281565b6040519081526020015b60405180910390f35b61021361271081565b61024261023d366004610fb3565b6104d1565b005b610242610252366004610fb3565b610545565b610213610265366004610ff8565b610552565b61021360025481565b61021361028136600461104c565b6105fb565b60005461029a90600160a01b900460ff1681565b604051901515815260200161021d565b6102136102b8366004611088565b60096020526000908152604090205481565b610213601481565b6102426102e03660046110a3565b61069c565b6102136102f3366004611088565b6106f9565b6102136103063660046110e5565b6107c6565b61021368327cb2734119d3b7a9601e1b81565b61029a61032c366004611088565b600a6020526000908152604090205460ff1681565b61021360015481565b610242610aea565b610213610360366004611088565b600b6020526000908152604090205481565b6102136103803660046110e5565b610afe565b600354610398906001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b6000546001600160a01b0316610398565b6102426103cf366004611088565b610c8a565b610213611c2081565b6102426103eb366004611118565b610cb4565b6103986103fe366004611088565b6005602052600090815260409020546001600160a01b031681565b610213610427366004611088565b60076020526000908152604090205481565b61021360045481565b610242610450366004610fb3565b610d3c565b61029a610463366004611088565b60086020526000908152604090205460ff1681565b610213610486366004611088565b60066020526000908152604090205481565b6102426104a6366004611142565b610d49565b6102426104b936600461117e565b610e6a565b6102426104cc366004611088565b610e90565b6104d9610f09565b600081116105405760405162461bcd60e51b815260206004820152602960248201527f5661756c745072696365466565643a20696e76616c6964205f707269636553616044820152686d706c65537061636560b81b60648201526084015b60405180910390fd5b600155565b61054d610f09565b600255565b60008061055f8686610afe565b6001600160a01b03871660009081526009602052604090205490915080156105f1576001600160a01b0387166000908152600a602052604090205460ff1680156105cb576127106105b083826111af565b6105ba90856111c2565b6105c491906111d9565b92506105ef565b6127106105d883826111fb565b6105e290856111c2565b6105ec91906111d9565b92505b505b5095945050505050565b6003546000906001600160a01b0316610615575081610695565b600354604051630ffd9c6d60e31b81526001600160a01b03868116600483015260248201869052841515604483015290911690637fece36890606401602060405180830381865afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610692919061120e565b90505b9392505050565b6106a4610f09565b6001600160a01b03938416600090815260056020908152604080832080546001600160a01b03191696909716959095179095556006855283812092909255600890935220805460ff1916911515919091179055565b6001600160a01b03808216600090815260056020526040812054909116806107335760405162461bcd60e51b815260040161053790611227565b60008190506000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c919061120e565b9050600081136107be5760405162461bcd60e51b815260040161053790611269565b949350505050565b6001600160a01b03808316600090815260056020526040812054909116806108005760405162461bcd60e51b815260040161053790611227565b6000819050600080826001600160a01b031663668a0f026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a91906112b7565b905060005b600154816001600160501b03161015610a3957806001600160501b0316826001600160501b03161115610a39576000816001600160501b031660000361093c576000856001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610913919061120e565b9050600081136109355760405162461bcd60e51b815260040161053790611269565b90506109e8565b60006001600160a01b038616639a6fc8f561095785876112d2565b6040516001600160e01b031960e084901b1681526001600160501b03909116600482015260240160a060405180830381865afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf91906112f9565b505050915050600081136109e55760405162461bcd60e51b815260040161053790611269565b90505b836000036109f7579250610a27565b878015610a0357508381115b15610a0f579250610a27565b87158015610a1c57508381105b15610a25578093505b505b80610a3181611349565b91505061086f565b5060008211610a985760405162461bcd60e51b815260206004820152602560248201527f5661756c745072696365466565643a20636f756c64206e6f7420666574636820604482015264707269636560d81b6064820152608401610537565b6001600160a01b038716600090815260066020526040902054610abc81600a611453565b610ad268327cb2734119d3b7a9601e1b856111c2565b610adc91906111d9565b955050505050505b92915050565b610af2610f09565b610afc6000610f63565b565b600080610b0b84846107c6565b600054909150600160a01b900460ff1615610b2e57610b2b8482856105fb565b90505b6001600160a01b03841660009081526008602052604090205460ff1615610c1757600068327cb2734119d3b7a9601e1b8211610b7f57610b7a8268327cb2734119d3b7a9601e1b6111fb565b610b95565b610b9568327cb2734119d3b7a9601e1b836111fb565b90506002548111610bb65768327cb2734119d3b7a9601e1b92505050610ae4565b838015610bce575068327cb2734119d3b7a9601e1b82115b15610bdb57509050610ae4565b83158015610bf4575068327cb2734119d3b7a9601e1b82105b15610c0157509050610ae4565b68327cb2734119d3b7a9601e1b92505050610ae4565b6001600160a01b0384166000908152600760205260409020548315610c6057612710610c4382826111af565b610c4d90846111c2565b610c5791906111d9565b92505050610ae4565b612710610c6d82826111fb565b610c7790846111c2565b610c8191906111d9565b95945050505050565b610c92610f09565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610cbc610f09565b6032811115610d205760405162461bcd60e51b815260206004820152602a60248201527f5661756c745072696365466565643a20696e76616c6964205f7370726561644260448201526961736973506f696e747360b01b6064820152608401610537565b6001600160a01b03909116600090815260076020526040902055565b610d44610f09565b600455565b610d51610f09565b6001600160a01b0383166000908152600b60205260409020544290610d7990611c20906111af565b10610ddc5760405162461bcd60e51b815260206004820152602d60248201527f5661756c745072696365466565643a2061646a7573746d656e7420667265717560448201526c195b98de48195e18d959591959609a1b6064820152608401610537565b6014811115610e265760405162461bcd60e51b8152602060048201526016602482015275696e76616c6964205f61646a7573746d656e7442707360501b6044820152606401610537565b6001600160a01b03929092166000908152600a60209081526040808320805460ff1916941515949094179093556009815282822093909355600b9092529020429055565b610e72610f09565b60008054911515600160a01b0260ff60a01b19909216919091179055565b610e98610f09565b6001600160a01b038116610efd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610537565b610f0681610f63565b50565b6000546001600160a01b03163314610afc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610537565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610fc557600080fd5b5035919050565b80356001600160a01b0381168114610fe357600080fd5b919050565b80358015158114610fe357600080fd5b6000806000806080858703121561100e57600080fd5b61101785610fcc565b935061102560208601610fe8565b925061103360408601610fe8565b915061104160608601610fe8565b905092959194509250565b60008060006060848603121561106157600080fd5b61106a84610fcc565b92506020840135915061107f60408501610fe8565b90509250925092565b60006020828403121561109a57600080fd5b61069582610fcc565b600080600080608085870312156110b957600080fd5b6110c285610fcc565b93506110d060208601610fcc565b92506040850135915061104160608601610fe8565b600080604083850312156110f857600080fd5b61110183610fcc565b915061110f60208401610fe8565b90509250929050565b6000806040838503121561112b57600080fd5b61113483610fcc565b946020939093013593505050565b60008060006060848603121561115757600080fd5b61116084610fcc565b925061116e60208501610fe8565b9150604084013590509250925092565b60006020828403121561119057600080fd5b61069582610fe8565b634e487b7160e01b600052601160045260246000fd5b80820180821115610ae457610ae4611199565b8082028115828204841417610ae457610ae4611199565b6000826111f657634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610ae457610ae4611199565b60006020828403121561122057600080fd5b5051919050565b60208082526022908201527f5661756c745072696365466565643a20696e76616c6964207072696365206665604082015261195960f21b606082015260800190565b6020808252601d908201527f5661756c745072696365466565643a20696e76616c6964207072696365000000604082015260600190565b80516001600160501b0381168114610fe357600080fd5b6000602082840312156112c957600080fd5b610695826112a0565b6001600160501b038281168282160390808211156112f2576112f2611199565b5092915050565b600080600080600060a0868803121561131157600080fd5b61131a866112a0565b945060208601519350604086015192506060860151915061133d608087016112a0565b90509295509295909350565b60006001600160501b0380831681810361136557611365611199565b6001019392505050565b600181815b808511156113aa57816000190482111561139057611390611199565b8085161561139d57918102915b93841c9390800290611374565b509250929050565b6000826113c157506001610ae4565b816113ce57506000610ae4565b81600181146113e457600281146113ee5761140a565b6001915050610ae4565b60ff8411156113ff576113ff611199565b50506001821b610ae4565b5060208310610133831016604e8410600b841016171561142d575081810a610ae4565b611437838361136f565b806000190482111561144b5761144b611199565b029392505050565b600061069583836113b256fea164736f6c6343000811000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c8063717cfe7a1161011a5780639dcb511a116100ad578063b8f611051161007c578063b8f6110514610455578063cefe0f2114610478578063d694376c14610498578063eb1c92a9146104ab578063f2fde38b146104be57600080fd5b80639dcb511a146103f0578063a27ea38614610419578063a39c73a314610439578063b731dd871461044257600080fd5b806395082d25116100e957806395082d251461030b5780639a0a6635146103c15780639b18dc47146103d45780639b889380146103dd57600080fd5b8063717cfe7a146103525780637cdddae6146103725780638b86616c146103855780638da5cb5b146103b057600080fd5b806348cac2771161019d57806356c8c2c11161016c57806356c8c2c1146102f857806367781c0e1461030b5780636ce8a44b1461031e5780636fc8070814610341578063715018a61461034a57600080fd5b806348cac277146102aa5780634a4b1f4f146102ca5780634b9ade47146102d257806356bf9de4146102e557600080fd5b80632fc3a70a116101d95780632fc3a70a14610257578063378e7bf71461026a5780633eba8d36146102735780633ebbc6011461028657600080fd5b80630957aed91461020b578063126082cf146102265780632fa03b8f1461022f5780632fbfe3d314610244575b600080fd5b610213603281565b6040519081526020015b60405180910390f35b61021361271081565b61024261023d366004610fb3565b6104d1565b005b610242610252366004610fb3565b610545565b610213610265366004610ff8565b610552565b61021360025481565b61021361028136600461104c565b6105fb565b60005461029a90600160a01b900460ff1681565b604051901515815260200161021d565b6102136102b8366004611088565b60096020526000908152604090205481565b610213601481565b6102426102e03660046110a3565b61069c565b6102136102f3366004611088565b6106f9565b6102136103063660046110e5565b6107c6565b61021368327cb2734119d3b7a9601e1b81565b61029a61032c366004611088565b600a6020526000908152604090205460ff1681565b61021360015481565b610242610aea565b610213610360366004611088565b600b6020526000908152604090205481565b6102136103803660046110e5565b610afe565b600354610398906001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b6000546001600160a01b0316610398565b6102426103cf366004611088565b610c8a565b610213611c2081565b6102426103eb366004611118565b610cb4565b6103986103fe366004611088565b6005602052600090815260409020546001600160a01b031681565b610213610427366004611088565b60076020526000908152604090205481565b61021360045481565b610242610450366004610fb3565b610d3c565b61029a610463366004611088565b60086020526000908152604090205460ff1681565b610213610486366004611088565b60066020526000908152604090205481565b6102426104a6366004611142565b610d49565b6102426104b936600461117e565b610e6a565b6102426104cc366004611088565b610e90565b6104d9610f09565b600081116105405760405162461bcd60e51b815260206004820152602960248201527f5661756c745072696365466565643a20696e76616c6964205f707269636553616044820152686d706c65537061636560b81b60648201526084015b60405180910390fd5b600155565b61054d610f09565b600255565b60008061055f8686610afe565b6001600160a01b03871660009081526009602052604090205490915080156105f1576001600160a01b0387166000908152600a602052604090205460ff1680156105cb576127106105b083826111af565b6105ba90856111c2565b6105c491906111d9565b92506105ef565b6127106105d883826111fb565b6105e290856111c2565b6105ec91906111d9565b92505b505b5095945050505050565b6003546000906001600160a01b0316610615575081610695565b600354604051630ffd9c6d60e31b81526001600160a01b03868116600483015260248201869052841515604483015290911690637fece36890606401602060405180830381865afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610692919061120e565b90505b9392505050565b6106a4610f09565b6001600160a01b03938416600090815260056020908152604080832080546001600160a01b03191696909716959095179095556006855283812092909255600890935220805460ff1916911515919091179055565b6001600160a01b03808216600090815260056020526040812054909116806107335760405162461bcd60e51b815260040161053790611227565b60008190506000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c919061120e565b9050600081136107be5760405162461bcd60e51b815260040161053790611269565b949350505050565b6001600160a01b03808316600090815260056020526040812054909116806108005760405162461bcd60e51b815260040161053790611227565b6000819050600080826001600160a01b031663668a0f026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a91906112b7565b905060005b600154816001600160501b03161015610a3957806001600160501b0316826001600160501b03161115610a39576000816001600160501b031660000361093c576000856001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610913919061120e565b9050600081136109355760405162461bcd60e51b815260040161053790611269565b90506109e8565b60006001600160a01b038616639a6fc8f561095785876112d2565b6040516001600160e01b031960e084901b1681526001600160501b03909116600482015260240160a060405180830381865afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf91906112f9565b505050915050600081136109e55760405162461bcd60e51b815260040161053790611269565b90505b836000036109f7579250610a27565b878015610a0357508381115b15610a0f579250610a27565b87158015610a1c57508381105b15610a25578093505b505b80610a3181611349565b91505061086f565b5060008211610a985760405162461bcd60e51b815260206004820152602560248201527f5661756c745072696365466565643a20636f756c64206e6f7420666574636820604482015264707269636560d81b6064820152608401610537565b6001600160a01b038716600090815260066020526040902054610abc81600a611453565b610ad268327cb2734119d3b7a9601e1b856111c2565b610adc91906111d9565b955050505050505b92915050565b610af2610f09565b610afc6000610f63565b565b600080610b0b84846107c6565b600054909150600160a01b900460ff1615610b2e57610b2b8482856105fb565b90505b6001600160a01b03841660009081526008602052604090205460ff1615610c1757600068327cb2734119d3b7a9601e1b8211610b7f57610b7a8268327cb2734119d3b7a9601e1b6111fb565b610b95565b610b9568327cb2734119d3b7a9601e1b836111fb565b90506002548111610bb65768327cb2734119d3b7a9601e1b92505050610ae4565b838015610bce575068327cb2734119d3b7a9601e1b82115b15610bdb57509050610ae4565b83158015610bf4575068327cb2734119d3b7a9601e1b82105b15610c0157509050610ae4565b68327cb2734119d3b7a9601e1b92505050610ae4565b6001600160a01b0384166000908152600760205260409020548315610c6057612710610c4382826111af565b610c4d90846111c2565b610c5791906111d9565b92505050610ae4565b612710610c6d82826111fb565b610c7790846111c2565b610c8191906111d9565b95945050505050565b610c92610f09565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610cbc610f09565b6032811115610d205760405162461bcd60e51b815260206004820152602a60248201527f5661756c745072696365466565643a20696e76616c6964205f7370726561644260448201526961736973506f696e747360b01b6064820152608401610537565b6001600160a01b03909116600090815260076020526040902055565b610d44610f09565b600455565b610d51610f09565b6001600160a01b0383166000908152600b60205260409020544290610d7990611c20906111af565b10610ddc5760405162461bcd60e51b815260206004820152602d60248201527f5661756c745072696365466565643a2061646a7573746d656e7420667265717560448201526c195b98de48195e18d959591959609a1b6064820152608401610537565b6014811115610e265760405162461bcd60e51b8152602060048201526016602482015275696e76616c6964205f61646a7573746d656e7442707360501b6044820152606401610537565b6001600160a01b03929092166000908152600a60209081526040808320805460ff1916941515949094179093556009815282822093909355600b9092529020429055565b610e72610f09565b60008054911515600160a01b0260ff60a01b19909216919091179055565b610e98610f09565b6001600160a01b038116610efd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610537565b610f0681610f63565b50565b6000546001600160a01b03163314610afc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610537565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610fc557600080fd5b5035919050565b80356001600160a01b0381168114610fe357600080fd5b919050565b80358015158114610fe357600080fd5b6000806000806080858703121561100e57600080fd5b61101785610fcc565b935061102560208601610fe8565b925061103360408601610fe8565b915061104160608601610fe8565b905092959194509250565b60008060006060848603121561106157600080fd5b61106a84610fcc565b92506020840135915061107f60408501610fe8565b90509250925092565b60006020828403121561109a57600080fd5b61069582610fcc565b600080600080608085870312156110b957600080fd5b6110c285610fcc565b93506110d060208601610fcc565b92506040850135915061104160608601610fe8565b600080604083850312156110f857600080fd5b61110183610fcc565b915061110f60208401610fe8565b90509250929050565b6000806040838503121561112b57600080fd5b61113483610fcc565b946020939093013593505050565b60008060006060848603121561115757600080fd5b61116084610fcc565b925061116e60208501610fe8565b9150604084013590509250925092565b60006020828403121561119057600080fd5b61069582610fe8565b634e487b7160e01b600052601160045260246000fd5b80820180821115610ae457610ae4611199565b8082028115828204841417610ae457610ae4611199565b6000826111f657634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610ae457610ae4611199565b60006020828403121561122057600080fd5b5051919050565b60208082526022908201527f5661756c745072696365466565643a20696e76616c6964207072696365206665604082015261195960f21b606082015260800190565b6020808252601d908201527f5661756c745072696365466565643a20696e76616c6964207072696365000000604082015260600190565b80516001600160501b0381168114610fe357600080fd5b6000602082840312156112c957600080fd5b610695826112a0565b6001600160501b038281168282160390808211156112f2576112f2611199565b5092915050565b600080600080600060a0868803121561131157600080fd5b61131a866112a0565b945060208601519350604086015192506060860151915061133d608087016112a0565b90509295509295909350565b60006001600160501b0380831681810361136557611365611199565b6001019392505050565b600181815b808511156113aa57816000190482111561139057611390611199565b8085161561139d57918102915b93841c9390800290611374565b509250929050565b6000826113c157506001610ae4565b816113ce57506000610ae4565b81600181146113e457600281146113ee5761140a565b6001915050610ae4565b60ff8411156113ff576113ff611199565b50506001821b610ae4565b5060208310610133831016604e8410600b841016171561142d575081810a610ae4565b611437838361136f565b806000190482111561144b5761144b611199565b029392505050565b600061069583836113b256fea164736f6c6343000811000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 396,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2854,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "isSecondaryPriceEnabled",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2857,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "priceSampleSpace",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2864,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "maxStrictPriceDeviation",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2866,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "secondaryPriceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2869,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "spreadThresholdBasisPoints",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2873,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "priceFeeds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2877,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "priceDecimals",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2881,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "spreadBasisPoints",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2885,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "strictStableTokens",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2890,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "adjustmentBasisPoints",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2895,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "isAdjustmentAdditive",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2899,
        "contract": "contracts/VaultPriceFeed.sol:VaultPriceFeed",
        "label": "lastAdjustmentTimings",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}